# Limit of memory used to store tuples to 100MB
# (0.1 GB)
# This effectively limits the memory, used by
# Tarantool. However, index and connection memory
# is stored outside the slab allocator, hence
# the effective memory usage can be higher (sometimes
# twice as high).
slab_alloc_arena = 0.1

# Tarantool executable directory
work_dir = "var"

# Store the pid in this file. Relative to startup dir.
pid_file = "tarantool_box.pid"

# Snapshot directory (where snapshots get saved/read)
snap_dir="."

# WAL directory (where WALs get saved/read)
wal_dir="."

# Pipe the logs into the following process.
logger="cat - >> tarantool_box.log"

# Read only and read-write port.
primary_port = 33013

# Read-only port.
secondary_port = 33014

# The port for administrative commands.
admin_port = 33015

# Log level
log_level = 4

# Each write ahead log contains this many rows.
# When the limit is reached, Tarantool closes
# the WAL and starts a new one.
rows_per_wal = 5000000

wal_fsync_delay = 0.1
wal_writer_inbox_size=1024

# Define a simple space with 1 HASH-based
# primary key.
space[0].enabled = 1
space[0].index[0].type = "HASH"
space[0].index[0].unique = 1
space[0].index[0].key_field[0].fieldno = 0
space[0].index[0].key_field[0].type = "NUM"
space[0].index[1].type = "TREE"
space[0].index[1].unique = 0
space[0].index[1].key_field[0].fieldno = 1
space[0].index[1].key_field[0].type = "STR"

space[1].enabled = 1
space[1].index[0].type = "HASH"
space[1].index[0].unique = 1
space[1].index[0].key_field[0].fieldno = 0
space[1].index[0].key_field[0].type = "STR"
